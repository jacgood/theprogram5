name: Development Deployment

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted
    steps:
      - name: Clean workspace manually
        run: |
          # Clean up any existing containers first
          docker system prune -f || true
          # Remove problematic files before checkout
          rm -rf logs/ || true
          rm -f **/*.log || true
          # Clean workspace for fresh checkout
          git clean -fdx || true
      
      - uses: actions/checkout@v4
        with:
          clean: false
      
      - name: Validate Docker files
        run: |
          # Check if Dockerfile exists and is valid
          if [ -f "build/docker/Dockerfile" ]; then
            echo "âœ“ Dockerfile found"
            # Basic syntax check
            docker run --rm -i hadolint/hadolint < build/docker/Dockerfile || echo "Dockerfile has warnings"
          else
            echo "âœ— Dockerfile not found"
            exit 1
          fi
      
      - name: Validate Docker Compose files
        run: |
          # Check if docker-compose files exist
          if [ -f "deploy/docker-compose.yml" ]; then
            echo "âœ“ docker-compose.yml found"
            # Validate compose file syntax
            docker compose -f deploy/docker-compose.yml config > /dev/null
          else
            echo "âœ— docker-compose.yml not found"
            exit 1
          fi
      
      - name: Check test scripts
        run: |
          chmod +x ./tests/*.sh
          echo "âœ“ Test scripts are executable"
          # Syntax check for shell scripts
          for script in ./tests/*.sh; do
            bash -n "$script" && echo "âœ“ $script syntax OK"
          done

  deploy:
    name: Deploy to Development
    runs-on: self-hosted
    needs: test
    
    steps:
      - name: Clean workspace manually
        run: |
          # Remove problematic files before checkout
          rm -rf logs/ || true
          rm -f **/*.log || true
          # Clean workspace for fresh checkout
          git clean -fdx || true
      
      - uses: actions/checkout@v4
        with:
          clean: false
      
      - name: Deploy to Development
        run: |
          echo "ðŸš€ Starting development deployment..."
          
          # Navigate to deploy directory
          cd deploy
          
          # Stop existing containers
          docker compose down || true
          
          # Build fresh images
          docker compose build --no-cache
          
          # Start development environment
          docker compose up -d
          
          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 30
          
          # Check service health
          docker compose ps
          
          echo "âœ… Development deployment completed"